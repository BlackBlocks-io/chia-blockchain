name: ðŸš¨ pre-commit

on:
  pull_request:
  push:
    branches:
      - 'long_lived/**'
      - main
      - 'release/**'

concurrency:
  # SHA is added to the end if on `main` to let all main workflows run
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}-${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/long_lived/')) && github.sha || '' }}
  cancel-in-progress: true

jobs:
  pre-commit:
    name: ${{ matrix.os.name }} ${{ matrix.arch.name }}
    runs-on: ${{ matrix.os.runs-on[matrix.arch.matrix] }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: Linux
            matrix: linux
            runs-on:
              intel: ubuntu-latest
              arm: [linux, arm64]
          - name: macOS
            matrix: macos
            runs-on:
              intel: macos-latest
              arm: [macos, arm64]
          - name: Windows
            matrix: windows
            runs-on:
              intel: windows-latest
        arch:
          - name: ARM64
            matrix: arm
          - name: Intel
            matrix: intel
        python:
          - major_dot_minor: '3.9'
        exclude:
          - os:
              matrix: windows
            arch:
              matrix: arm

    steps:
    - name: Clean workspace
      uses: Chia-Network/actions/clean-workspace@main

    - uses: actions/checkout@v3

    - uses: Chia-Network/actions/setup-python@main
      with:
        python-version: ${{ matrix.python.major_dot_minor }}

    - name: Run install script (macOS, Ubuntu)
      if: matrix.os.matrix == 'macos' || matrix.os.matrix == 'linux'
      env:
        INSTALL_PYTHON_VERSION: ${{ matrix.python.major_dot_minor }}
      run: |
        sh install.sh -d
        echo "$(cd venv/bin/; pwd)" >> $GITHUB_PATH
        echo "VIRTUAL_ENV=$(cd venv/; pwd)" >> $GITHUB_ENV

    - name: Run install script (Windows)
      if: matrix.os.matrix == 'windows'
      env:
        INSTALL_PYTHON_VERSION: ${{ matrix.python.major_dot_minor }}
      run: |
        ./Install.ps1 -d
        (Resolve-Path venv/Scripts/).Path >> $Env:GITHUB_PATH
        $env_path = (Resolve-Path venv/).Path
        Write-Output "VIRTUAL_ENV=$env_path" >> $Env:GITHUB_ENV

    - uses: pre-commit/action@v2.0.3
      with:
        extra_args: --verbose --all-files
